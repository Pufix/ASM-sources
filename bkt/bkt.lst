     1                                  bits 32
     2                                  
     3                                  extern exit,printf
     4                                  global start
     5                                  import exit msvcrt.dll
     6                                  import printf msvcrt.dll
     7                                  
     8                                  segment data use32 class=data
     9                                      nbrdigit equ 9
    10 00000000 FF<rept>                    list times 100 db -1
    11 00000064 256400                      format db "%d",0
    12 00000067 0A00                        entr db 10,0
    13                                  segment code use32 class=code
    14                                  
    15                                      start:
    16 00000000 B901000000                      mov ecx,1
    17 00000005 BE[00000000]                    mov esi,list
    18 0000000A C605[00000000]00                mov [list],byte 0
    19 00000011 E349                            jecxz finnish
    20                                          for1:
    21 00000013 8A06                                mov al,[esi]
    22 00000015 FEC0                                inc al
    23 00000017 8806                                mov [esi],al
    24 00000019 3C0A                                cmp al,10
    25 0000001B 7334                                jae left
    26 0000001D 83F909                                  cmp ecx,nbrdigit
    27 00000020 752B                                    jne neq
    28 00000022 51                                          push ecx
    29 00000023 B909000000                                  mov ecx, nbrdigit
    30 00000028 56                                          push esi
    31 00000029 BE[00000000]                                mov esi,list
    32                                                      afis:
    33 0000002E B800000000                                      mov eax,0
    34 00000033 AC                                              lodsb
    35 00000034 51                                              push ecx
    36 00000035 50                                              push eax
    37 00000036 68[64000000]                                    push format
    38                                                          ;call [printf]
    39 0000003B 83C408                                          add esp,8
    40 0000003E 59                                              pop ecx
    41 0000003F E2ED                                        loop afis
    42 00000041 68[67000000]                                push entr
    43                                                      ;call [printf]
    44 00000046 83C404                                      add esp,4
    45 00000049 5E                                          pop esi
    46 0000004A 59                                          pop ecx
    47 0000004B EB09                                        jmp afterleft
    48                                                  neq:
    49 0000004D 41                                          inc ecx
    50 0000004E AC                                          lodsb
    51                                                      
    52 0000004F EB05                                        jmp afterleft
    53                                              left:
    54 00000051 C606FF                                  mov [esi],byte -1
    55 00000054 4E                                      dec esi
    56 00000055 49                                      dec ecx
    57                                              afterleft:
    58 00000056 83F900                              cmp ecx,dword 0
    59 00000059 41                                  inc ecx
    60 0000005A E0B7                            loopne for1
    61                                      finnish:
    62 0000005C 6A00                            push dword 0 
    63 0000005E FF15[00000000]                  call [exit]
