     1                                  bits 32
     2                                  
     3                                  global start
     4                                  extern exit
     5                                  import exit msvcrt.dll
     6                                  
     7                                  segment data use32 class=data
     8 00000000 010503080209                s db 1,5,3,8,2,9
     9                                      l equ $-s
    10 00000006 <res 00000006>              d1 resb l
    11 0000000C <res 00000006>              d2 resb l
    12 00000012 00000000                    cont1 dd 0
    13 00000016 00000000                    cont2 dd 0
    14                                  segment code use32 class=code
    15                                      start:
    16 00000000 B906000000                      mov ECx,l
    17 00000005 BE00000000                      mov esi,0
    18 0000000A B300                            mov Bl,0
    19 0000000C B700                            mov Bh,0
    20 0000000E E348                            jecxz finnish
    21                                          while:
    22 00000010 8A86[00000000]                      mov Al,[s+esi]
    23 00000016 6698                                cbw
    24 00000018 B302                                mov Bl,2
    25 0000001A F6FB                                idiv Bl
    26 0000001C 80FC01                              cmp Ah,byte 1
    27 0000001F 8A86[00000000]                      mov Al,[s+esi]
    28 00000025 7C02                                jl even
    29 00000027 7317                                jae odd
    30                                              even:
    31 00000029 56                                      push esi
    32 0000002A 8B35[12000000]                          mov esi,[cont1]
    33 00000030 8886[06000000]                          mov [d1+esi],Al
    34 00000036 46                                      inc esi
    35 00000037 8935[12000000]                          mov [cont1],esi
    36 0000003D 5E                                      pop esi
    37 0000003E EB15                                    jmp afterop
    38                                              odd:
    39 00000040 56                                      push esi
    40 00000041 8B35[16000000]                          mov esi,[cont2]
    41 00000047 8886[0C000000]                          mov [d2+esi],Al
    42 0000004D 46                                      inc esi
    43 0000004E 8935[16000000]                          mov [cont2],esi
    44 00000054 5E                                      pop esi
    45                                              afterop:
    46 00000055 46                                  inc esi
    47 00000056 E2B8                            loop while
    48                                      finnish:
    49 00000058 6A00                            push dword 0
    50 0000005A FF15[00000000]                  call [exit]
    51                                      
