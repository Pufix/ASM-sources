     1                                  bits 32
     2                                  
     3                                  global start
     4                                  extern exit, fread, printf, fopen, fclose
     5                                  import exit msvcrt.dll
     6                                  import fread msvcrt.dll
     7                                  import printf msvcrt.dll
     8                                  import fopen msvcrt.dll
     9                                  import fclose msvcrt.dll
    10                                  
    11                                  segment data use32 class=data
    12 00000000 66696C652E74787400          filename db "file.txt",0
    13 00000009 256F00                      format db "%o",0
    14 0000000C 7200                        formatread db "r",0
    15 0000000E 00                          len db 0
    16 0000000F <res 000001F4>              array resb 500
    17 00000203 00                          temp db 0
    18 00000204 2000                        space db " ",0
    19 00000206 <res 00000064>              result resb 100
    20 0000026A 00                          len2 db 0
    21                                      
    22                                  segment code use32 class=code
    23                                      start:
    24 00000000 68[0C000000]                    push formatread
    25 00000005 68[00000000]                    push filename
    26 0000000A FF15[00000000]                  call [fopen]
    27 00000010 83C408                          add esp,8
    28 00000013 89C3                            mov ebx,eax
    29                                          
    30 00000015 53                              push ebx
    31 00000016 6A01                            push dword 1
    32 00000018 6A01                            push dword 1
    33 0000001A 68[0E000000]                    push len
    34 0000001F FF15[00000000]                  call [fread]
    35 00000025 83C410                          add esp, 16
    36                                          
    37                                          
    38 00000028 53                              push ebx
    39 00000029 FF35[0E000000]                  push dword [len]
    40 0000002F 6A01                            push dword 1
    41 00000031 68[0F000000]                    push array
    42 00000036 FF15[00000000]                  call [fread]
    43 0000003C 83C410                          add esp, 16
    44                                          
    45 0000003F BE[10000000]                    mov esi, array+1
    46 00000044 BF[06020000]                    mov edi, result
    47 00000049 B900000000                      mov ecx,0
    48 0000004E 8A0D[0E000000]                  mov cl,[len]
    49 00000054 83E930                          sub ecx,48
    50 00000057 E35F                            jecxz end
    51 00000059 B300                            mov bl,0
    52                                          loop1:
    53 0000005B AC                                  lodsb
    54 0000005C 3C20                                cmp al,32
    55 0000005E 741A                                je spacee
    56 00000060 2C30                                sub al,48
    57 00000062 88DA                                mov dl,bl
    58 00000064 00D3<rept>                          times 9 add bl,dl
    59 00000076 00C3                                add bl,al
    60 00000078 EB06                                jmp notspace
    61                                              spacee:
    62 0000007A 88D8                                mov al,bl
    63 0000007C AA                                  stosb 
    64 0000007D 49                                  dec ecx
    65 0000007E B300                                mov bl,0
    66                                              notspace:
    67 00000080 41                                  inc ecx
    68 00000081 E2D8                            loop loop1
    69 00000083 BE[06020000]                    mov esi, result
    70 00000088 B900000000                      mov ecx,0
    71 0000008D 8A0D[0E000000]                  mov cl,[len]
    72 00000093 80E930                          sub cl,48
    73                                          loop2:
    74 00000096 AC                                  lodsb
    75 00000097 6698                                cbw
    76 00000099 98                                  cwde
    77 0000009A 51                                  push ecx
    78 0000009B 50                                  push eax
    79 0000009C 68[09000000]                        push format
    80 000000A1 FF15[00000000]                      call [printf]
    81 000000A7 68[04020000]                        push space
    82 000000AC FF15[00000000]                      call [printf]
    83 000000B2 83C40C                              add esp,12
    84 000000B5 59                                  pop ecx
    85 000000B6 E2DE                            loop loop2
    86                                      end:
    87 000000B8 6A00                            push dword 0
    88 000000BA FF15[00000000]                  call [exit]
    89                                  
    90                                          
    91                                          
    92                                          
    93                                          
    94                                          
    95                                          
    96                                          
    97                                          
    98                                          
    99                                          
