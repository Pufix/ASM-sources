     1                                  bits 32
     2                                  
     3                                  extern exit, printf
     4                                  global start
     5                                  import exit msvcrt.dll
     6                                  import printf msvcrt.dll
     7                                  
     8                                  segment data use32 class=data
     9                                  ;Given an array S of doublewords, build the array of bytes D formed from bytes of doublewords sorted as unsigned numbers in ascending order
    10 00000000 07563412153C2B1ADA-         s DD 12345607h, 1A2B3C15h, 172AFCDAh
    10 00000009 FC2A17             
    11                                      len equ $-s
    12 0000000C <res 0000000C>              d resb len
    13 00000018 01                          aux db 1
    14 00000019 2564202C00                  format db "%d ,",0
    15 0000001E 0A00                        entr db 10,0
    16 00000020 616674657220736F72-         msg db "after sorting:"
    16 00000029 74696E673A         
    17                                      
    18                                  segment code use32 class=code
    19                                      start:
    20 00000000 B90C000000                      mov ecx, len
    21 00000005 BE[00000000]                    mov esi,s
    22                                          for4:
    23 0000000A B800000000                          mov eax,0
    24 0000000F AC                                  lodsb
    25 00000010 50                                  push eax
    26 00000011 89CB                                mov ebx,ecx
    27 00000013 68[19000000]                        push dword format
    28 00000018 FF15[00000000]                      call [printf]
    29 0000001E 83C408                              add esp, 4*2
    30 00000021 89D9                                mov ecx,ebx
    31 00000023 E2E5                            loop for4
    32 00000025 68[1E000000]                    push dword entr
    33 0000002A FF15[00000000]                  call [printf]
    34 00000030 68[20000000]                    push dword msg
    35 00000035 FF15[00000000]                  call [printf]
    36 0000003B 68[1E000000]                    push dword entr
    37 00000040 FF15[00000000]                  call [printf]
    38 00000046 83C40C                          add esp, 4*3
    39                                          
    40 00000049 B90B000000                      mov ecx,len-1
    41 0000004E BE[00000000]                    mov esi,s
    42 00000053 BF[0C000000]                    mov edi,d
    43 00000058 E31B                            jecxz fin
    44                                          for1:
    45 0000005A 89F3                                mov ebx,esi
    46 0000005C AC                                  lodsb
    47 0000005D 51                                  push ecx
    48                                              for2:
    49 0000005E 3A06                                    cmp al,[esi]
    50 00000060 7608                                    jbe postswap
    51 00000062 8A13                                        mov dl,[ebx]
    52 00000064 8A06                                        mov al,[esi]
    53 00000066 8816                                        mov [esi],dl
    54 00000068 8803                                        mov [ebx],al
    55                                                  postswap:
    56 0000006A 46                                      inc esi
    57 0000006B E2F1                                loop for2
    58 0000006D 59                                  pop ecx
    59 0000006E AA                                  stosb
    60 0000006F 89DE                                mov esi,ebx
    61 00000071 46                                  inc esi
    62 00000072 E2E6                            loop for1
    63 00000074 A4                              movsb 
    64                                      fin:
    65 00000075 B90C000000                      mov ecx, len
    66 0000007A BE[0C000000]                    mov esi,d
    67                                          for3:
    68 0000007F AC                                  lodsb
    69 00000080 6698                                cbw
    70 00000082 98                                  cwde
    71 00000083 51                                  push ecx
    72 00000084 50                                  push eax
    73 00000085 68[19000000]                        push dword format
    74 0000008A FF15[00000000]                      call [printf]
    75 00000090 83C408                              add esp,4*2
    76 00000093 59                                  pop ecx
    77 00000094 E2E9                            loop for3
    78 00000096 6A00                            push dword 0
    79 00000098 FF15[00000000]                  call [exit]
